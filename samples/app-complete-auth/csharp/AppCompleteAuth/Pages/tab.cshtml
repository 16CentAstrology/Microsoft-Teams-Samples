@page
@model AppCompleteAuth.Pages.tabModel
@{
}

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://statics.teams.cdn.office.net/sdk/v1.10.0/js/MicrosoftTeams.min.js"
            integrity="sha384-6oUzHUqESdbT3hNPDDZUa/OunUj5SoxuMXNek1Dwe6AmChzqc6EJhjVrJ93DY/Bv"
            crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        var facebookAppId = '@Model.FacebookAppId';
        let redirectUri = window.location.origin + "/facebook-auth-end";
        let accessToken;

        microsoftTeams.initialize();

        // Tab sso authentication.
        function ssoAuthentication()
        {
             getClientSideToken()
            .then((clientSideToken) => {           
                return getServerSideToken(clientSideToken);
            })
            .catch((error) => {
                debugger;
                if (error === "invalid_grant") {
                    // Display in-line button so user can consent
                    $("#divError").text("Error while exchanging for Server token - invalid_grant - User or admin consent is required.");
                    $("#divError").show();
                    $("#consent").show();
                    $("#sso").hide();
                } else {
                    // Display in-line button so user can consent
                    $("#divError").text("Error while exchanging for Server token - invalid_grant - User or admin consent is required.");
                    $("#divError").show();
                    $("#consent").show();
                    $("#sso").hide();
                }
            });
        }

        // Get client side token.
        function getClientSideToken() {

            return new Promise((resolve, reject) => {
            microsoftTeams.authentication.getAuthToken({
                successCallback: (result) => {
                    resolve(result);     
                },
                failureCallback: function (error) {                
                    reject("Error getting token: " + error);
                }
            });
         });
        }

        // Get server side token and user profile.
        function getServerSideToken(clientSideToken) {
            return new Promise((resolve, reject) => {
                microsoftTeams.getContext((context) => {
                    var scopes = ["https://graph.microsoft.com/User.Read"];
                    fetch('/GetUserAccessToken', {
                        method: 'get',
                        headers: {
                            "Content-Type": "application/text",
                            "Authorization": "Bearer " + clientSideToken
                        },
                        cache: 'default'
                    })
                    .then((response) => {
                        if (response.ok) {
                            return response.text();
                        } else {
                            reject(response.error);
                        }
                    })
                    .then((responseJson) => {
                        if(responseJson == ""){
                            $("#divError").text("Error while exchanging for Server token - invalid_grant - User or admin consent is required.");
                            $("#divError").show();
                            $("#consent").show();
                            $("#sso").hide();
                        }else{
                            userDetails = JSON.parse(responseJson);
                             $("#userImgSso").attr("src", userDetails.Photo);
                             $("#name").append(": " + userDetails.User.DisplayName);
                             $("#email").append(": " + userDetails.User.UserPrincipalName);
                             $("#work").append(": " + userDetails.Title);
                        }
                    });
                });
            });
        }

        // Request consent on implicit grant error.
        function requestConsent() {
            getToken()
            .then(data => {
            $("#consent").hide();
            $("#divError").hide();
            accessToken = data.accessToken;
            microsoftTeams.getContext((context) => {
                getUserInfo(context.userPrincipalName);
            });
          });
        }

        // Get token for multi tenant.
        function getToken() {
            return new Promise((resolve, reject) => {
                microsoftTeams.authentication.authenticate({
                    url: window.location.origin + "/auth-start",
                    width: 600,
                    height: 535,
                    successCallback: result => {
                        resolve(result);
                    },
                    failureCallback: reason => {
                        reject(reason);
                    }
                });
            });
        }

        // Authenticate user using credentials.
        function usingCredentials(){
            microsoftTeams.authentication.authenticate({
                url: window.location.origin + "/popUpSignin?from=tab",
                width: 600,
                height: 535,
                successCallback: result => {
                    $("#sname").append(": Test user");
                    $("#semail").append(": testaccount@test123.onmicrosoft.com");
                    $("#swork").append(": Data scientist");
                    $("#userImgId").attr("src", "https://pbs.twimg.com/profile_images/3647943215/d7f12830b3c17a5a9e4afcc370e3a37e_400x400.jpeg");
                },
                failureCallback: reason => {
                    console.log(reason);
                }
            });              
        }

        // Get user information.
        function getUserInfo(userPrincipleName) {
            if (userPrincipleName) {
            $.ajax({
                type: 'POST',
                 url: '/GetUserDetails',
                 dataType: 'json',
                 data: {
                        'accessToken': accessToken,
                    },
                success: function (responseJson) {
                    userDetails = JSON.parse(responseJson);
                        $("#sso").show();
                        $("#userImgSso").attr("src", userDetails.Photo);
                        $("#name").append(": " + userDetails.User.DisplayName);
                        $("#email").append(": " + userDetails.User.UserPrincipalName);
                        $("#work").append(": " + userDetails.Title);
                    },
                error: function (xhr, textStatus, errorThrown) {
                         console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    }
             });
          }
        }

        // Get client side token for facebook.
        function fbAuthentication() {
            return new Promise((resolve, reject) => {
                microsoftTeams.authentication.authenticate({
                    url: `https://www.facebook.com/v12.0/dialog/oauth?client_id=${facebookAppId}&redirect_uri=${redirectUri}&state=1234535`,
                    width: 600,
                    height: 535,
                    successCallback: result => {
                        let data = localStorage.getItem(result);
                        let tokenDetails = JSON.parse(data);
                        localStorage.removeItem(result);
                        resolve(tokenDetails);
                    },
                    failureCallback: reason => {
                        reject(reason);
                    }
                });
            });
        }

        // Get face book profile of user.
        function getServerSideTokenFb(clientSideToken) {
            return new Promise((resolve, reject) => {
                microsoftTeams.getContext((context) => {

                     $.ajax({
                        type: 'POST',
                        url: '/getFbAccessToken',
                        dataType: 'json',
                        data: {
                                'accessToken': clientSideToken,
                            },
                        success: function (responseJson) {
                             facebookProfile = JSON.parse(responseJson);
                             $("#fbname").append(": " + facebookProfile.name);
                             $("#userFbImg").attr("src", facebookProfile.picture);
                            },
                        error: function (xhr, textStatus, errorThrown) {
                                 console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                            }
                     });
                });
            });
        }

        // Initiate facebook login.
        function facebookLogin() {
            fbAuthentication()
                .then((result) => {
                    return getServerSideTokenFb(result.idToken);
                })
                .catch((error) => {
                    console.log(error);
                });
        }
    </script>

    <style>
        h3 {
            text-align: center;
            margin-top: 0.5rem;
        }

        button {
            margin-left: 36rem;
            margin-top: 1rem;
        }

        .card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            width: 25rem;
            height: 11rem;
            margin-left: 2rem;
            margin-top: 0.5rem;
        }

        .card:hover {
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        }

        .container {
            padding: 2px 2px;
            display: flex;
        }

        img {
            border-radius: 50%;
        }

        .profile {
            margin-top: 1rem;
            margin-left: 2rem;
            max-width: 15rem;
            align-content: flex-start;
        }

        .btn-outline-info {
            margin-left: 12rem;
            max-width: 10rem;
        }

        .signin-header {
            margin-left: 2rem;
            margin-top: 1rem;
        }

        .card-container-div {
            display: flex;
        }
    </style>

</head>
<body class="theme-light">
    <div class="surface">
        <h3> Welcome to App complete auth sample</h3>
         <div class="card-container-div">
            <div>
                <div class="signin-header"><b>1) Sign in using SSO</b></div>
                <div class="card">
                    <div class="container">
                        <img src="https://media.istockphoto.com/vectors/profile-placeholder-image-gray-silhouette-no-photo-vector-id1016744034?k=20&m=1016744034&s=612x612&w=0&h=kjCAwH5GOC3n3YRTHBaLDsLIuF8P3kkAJc9RvfiYWBY="
                            alt="Avatar" id="userImgSso" width="100px">
                        <div class="profile">
                            <span id="name"><b>Name </b></span><br>
                            <span id="email"><b>Email </b></span></span><br>
                            <span id="work"><b>Work </b></span></span>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-info" onclick="requestConsent()" id="consent"
                        style="display:none;">Authenticate</button>
                    <button type="button" class="btn btn-outline-info" onclick="ssoAuthentication()" id="sso">Get
                        Details</button>
                </div>
                <div id="divError" style="display: none"></div>
            </div>
            <div>
                <div class="signin-header"><b>2) Sign in using Facebook</b></div>
                <div id="divError" style="display: none"></div>
                <div class="card">
                    <div class="container">
                        <img src="https://media.istockphoto.com/vectors/profile-placeholder-image-gray-silhouette-no-photo-vector-id1016744034?k=20&m=1016744034&s=612x612&w=0&h=kjCAwH5GOC3n3YRTHBaLDsLIuF8P3kkAJc9RvfiYWBY="
                            alt="Avatar" id="userFbImg" width="100px">
                        <div class="profile">
                            <span id="fbname"><b>Name</b></span>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-info" onclick="facebookLogin()">Get Details</button>
                </div>
            </div>
            <div>
                <div class="signin-header"><b>3) Sign in using id/password</b></div>
                <div id="divError" style="display: none"></div>
                <div class="card">
                    <div class="container">
                        <img src="https://media.istockphoto.com/vectors/profile-placeholder-image-gray-silhouette-no-photo-vector-id1016744034?k=20&m=1016744034&s=612x612&w=0&h=kjCAwH5GOC3n3YRTHBaLDsLIuF8P3kkAJc9RvfiYWBY="
                           id="userImgId" alt="Avatar" width="100px">
                        <div class="profile">
                            <span id="sname"><b>Name </b></span><br>
                            <span id="semail"><b>Email </b></span><br>
                            <span id="swork"><b>Work </b></span>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-info" onclick="usingCredentials()">Get Details</button>
                </div>
            </div>
        </div>
    </div>
</body>