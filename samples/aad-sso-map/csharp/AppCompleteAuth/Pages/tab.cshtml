@page
@model AppCompleteAuth.Pages.tabModel
@{
}

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://statics.teams.cdn.office.net/sdk/v1.10.0/js/MicrosoftTeams.min.js"
            integrity="sha384-6oUzHUqESdbT3hNPDDZUa/OunUj5SoxuMXNek1Dwe6AmChzqc6EJhjVrJ93DY/Bv"
            crossorigin="anonymous"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        var facebookAppId = '@Model.FacebookAppId';
        var baseUrl = '@Model.BaseUrl'
        let is_google_signed_in = false;
        let is_fb_signed_in = false;
        var imageUrl = baseUrl + "/home.png";
        $("#homeImg").attr("src", imageUrl);
        let redirectUri = window.location.origin + "/facebook-auth-end";
        var googleLogo = baseUrl + "/googleIcon.png";
        $("#googleLogo").attr("src", googleLogo);
        let accessToken;

        $(document).ready(function () {
            microsoftTeams.initialize();
            microsoftTeams.getContext(function (context) {
                getUserDetails(context.upn);
            });
        });

        // Get user details
        function getUserDetails(userName) {
            $.ajax({
                type: 'POST',
                url: '/getUSerMapData',
                dataType: 'json',
                data: {
                    'userName': userName
                },
                success: function (responseJson) {
                    if (responseJson == 'NoDataFound') {
                        $("#sso").show();
                    }
                    else {
                        const userDetails = JSON.parse(responseJson);
                        console.log("aad" + userDetails);
                        if (userDetails.isAadSignedIn) {
                            ssoAuthentication();
                            $("#sso").hide();
                            $(".imgContainer").hide();
                            if (userDetails.isGoogleSignedIn) {
                                is_google_signed_in = true;
                                setTimeout(() => { getGoogleDetails(userDetails.GoogleToken) }, 3000);
                            }
                            if (userDetails.isFacebookSignedIn) {
                                is_fb_signed_in = true;
                                getFbDetails(userDetails.FacebookToken);
                            }
                        }
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                }
            });
        };

        // Tab sso authentication.
        function ssoAuthentication()
        {
             getClientSideToken()
            .then((clientSideToken) => {
                return getServerSideToken(clientSideToken);
            })
            .catch((error) => {
                debugger;
                if (error === "invalid_grant") {
                    // Display in-line button so user can consent
                    $("#divError").text("Error while exchanging for Server token - invalid_grant - User or admin consent is required.");
                    $("#divError").show();
                    $("#consent").show();
                    $("#sso").hide();
                } else {
                    // Display in-line button so user can consent
                    $("#divError").text("Error while exchanging for Server token - invalid_grant - User or admin consent is required.");
                    $("#divError").show();
                    $("#consent").show();
                    $("#sso").hide();
                }
            });
        }

        // Get client side token.
        function getClientSideToken() {

            return new Promise((resolve, reject) => {
            microsoftTeams.authentication.getAuthToken({
                successCallback: (result) => {
                    resolve(result);
                },
                failureCallback: function (error) {
                    reject("Error getting token: " + error);
                }
            });
         });
        }

        // Get server side token and user profile.
        function getServerSideToken(clientSideToken) {
            return new Promise((resolve, reject) => {
                microsoftTeams.getContext((context) => {
                    $.ajax({
                        type: 'POST',
                        url: '/GetUserAccessToken',
                        dataType: 'json',
                        data: {
                            'accessToken': clientSideToken,
                            'tid': context.tid,
                            'userName': context.upn,
                        },
                        success: function (responseJson) {
                            userDetails = JSON.parse(responseJson);
                            $("#sso").hide();
                            $(".imgContainer").hide();
                            $("#userImgSso").attr("src", userDetails.Photo);
                            $("#name").append(": " + userDetails.User.DisplayName);
                            $("#email").append(": " + userDetails.User.UserPrincipalName);
                            $("#work").append(": " + userDetails.Title);
                            if (!is_google_signed_in) {
                                $("#googlelogin").show();
                            }
                            if (!is_fb_signed_in) {
                                $("#facebooklogin").show();
                            }
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                        }
                    });
                });
            });
        }

        // Request consent on implicit grant error.
        function requestConsent() {
            getToken()
            .then(data => {
            $("#consent").hide();
            $("#divError").hide();
            accessToken = data.accessToken;
            microsoftTeams.getContext((context) => {
                getUserInfo(context.userPrincipalName);
            });
          });
        }

        // Get token for multi tenant.
        function getToken() {
            return new Promise((resolve, reject) => {
                microsoftTeams.authentication.authenticate({
                    url: window.location.origin + "/auth-start",
                    width: 600,
                    height: 535,
                    successCallback: result => {
                        resolve(result);
                    },
                    failureCallback: reason => {
                        reject(reason);
                    }
                });
            });
        }

        // Authenticate user using credentials.
        function usingCredentials(){
            microsoftTeams.authentication.authenticate({
                url: window.location.origin + "/popUpSignin?from=tab",
                width: 600,
                height: 535,
                successCallback: result => {
                    $("#sname").append(": Test user");
                    $("#semail").append(": testaccount@test123.onmicrosoft.com");
                    $("#swork").append(": Data scientist");
                    $("#userImgId").attr("src", "https://pbs.twimg.com/profile_images/3647943215/d7f12830b3c17a5a9e4afcc370e3a37e_400x400.jpeg");
                },
                failureCallback: reason => {
                    console.log(reason);
                }
            });
        }

        // Get user information.
        function getUserInfo(userPrincipleName) {
            if (userPrincipleName) {
            $.ajax({
                type: 'POST',
                 url: '/GetUserDetails',
                 dataType: 'json',
                 data: {
                        'accessToken': accessToken,
                    },
                success: function (responseJson) {
                    userDetails = JSON.parse(responseJson);
                        $("#sso").show();
                        $("#userImgSso").attr("src", userDetails.Photo);
                        $("#name").append(": " + userDetails.User.DisplayName);
                        $("#email").append(": " + userDetails.User.UserPrincipalName);
                        $("#work").append(": " + userDetails.Title);
                    },
                error: function (xhr, textStatus, errorThrown) {
                         console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    }
             });
          }
        }

        // Get client side token for facebook.
        function fbAuthentication() {
            return new Promise((resolve, reject) => {
                microsoftTeams.authentication.authenticate({
                    url: `https://www.facebook.com/v12.0/dialog/oauth?client_id=${facebookAppId}&redirect_uri=${redirectUri}&state=1234535`,
                    width: 600,
                    height: 535,
                    successCallback: result => {
                        let data = localStorage.getItem(result);
                        let tokenDetails = JSON.parse(data);
                        localStorage.removeItem(result);
                        resolve(tokenDetails);
                    },
                    failureCallback: reason => {
                        reject(reason);
                    }
                });
            });
        }

        // Get client side token for facebook.
        function googleAuthentication() {
            return new Promise((resolve, reject) => {
                microsoftTeams.authentication.authenticate({
                    url: `https://accounts.google.com/o/oauth2/v2/auth/identifier?client_id=857226880078-gtp1fg2dicr1uk09kk8grdaploig3oje.apps.googleusercontent.com&scope=openid email profile&response_type=code&redirect_uri=https://f8ea651f07bb.ngrok.io/facebook-auth-end`,
                    width: 600,
                    height: 535,
                    successCallback: result => {
                        let data = localStorage.getItem(result);
                        let tokenDetails = JSON.parse(data);
                        localStorage.removeItem(result);
                        resolve(tokenDetails);
                    },
                    failureCallback: reason => {
                        reject(reason);
                    }
                });
            });
        }

        // Get face book profile of user.
        function getServerSideTokenFb(clientSideToken) {
            return new Promise((resolve, reject) => {
                microsoftTeams.getContext((context) => {

                     $.ajax({
                        type: 'POST',
                        url: '/getFbAccessToken',
                        dataType: 'json',
                        data: {
                            'accessToken': clientSideToken,
                            'userName': context.upn,
                            },
                        success: function (responseJson) {
                            facebookProfile = JSON.parse(responseJson);
                            console.log(responseJson);
                            $("#fbname").empty();
                             $("#fbname").append(": " + facebookProfile.name);
                            $("#userFbImg").attr("src", facebookProfile.picture);
                            $('#cardFacebook').show();
                            $("#facebooklogin").hide();
                            $('#cardSSO').show();
                            },
                        error: function (xhr, textStatus, errorThrown) {
                                 console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                            }
                     });
                });
            });
        }

        // Get face book profile of user.
        function getServerSideTokenGoogle(clientSideToken) {
            return new Promise((resolve, reject) => {
                microsoftTeams.getContext((context) => {

                    $.ajax({
                        type: 'POST',
                        url: '/getGoogleAccessToken',
                        dataType: 'json',
                        data: {
                            'accessToken': clientSideToken,
                            'userName': context.upn,
                        },
                        success: function (responseJson) {
                            let googleProfile = JSON.parse(responseJson);
                            console.dir("res" + googleProfile);
                            console.log("res" + responseJson);
                            $("#userImgGoogle").attr("src", googleProfile.picture);
                            $("#gname").empty();
                            $("#gemail").empty();
                            $("#gname").append(googleProfile.name);
                            $("#gemail").append(googleProfile.email);
                            $('#cardGoogle').show();
                            $('#googlelogin').hide();
                            $('#cardSSO').show();
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                        }
                    });
                });
            });
        }

        // Initiate facebook login.
        function facebookLogin() {
            fbAuthentication()
                .then((result) => {
                    return getServerSideTokenFb(result.idToken);
                })
                .catch((error) => {
                    console.log(error);
                });
        }

         // Initiate google login.
        function googleAuth() {
            googleAuthentication()
                .then((result) => {
                    return getServerSideTokenGoogle(result.idToken);
                })
                .catch((error) => {
                    console.log(error);
                });
        }

        function getFbDetails(token) {
            console.log("da" + token);
            $.ajax({
                type: 'POST',
                url: '/getFbDetails',
                dataType: 'json',
                data: {
                    'token': token
                }, success: function (responseJson) {
                    let facebookProfile = JSON.parse(responseJson);
                    $("#fbname").append(facebookProfile.name);
                    $("#userFbImg").attr("src", facebookProfile.picture);
                    $('#cardFacebook').show();
                    $("#facebooklogin").hide();
                    $('#cardSSO').show();
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    fbAuth();
                }
            })
        }

        function getGoogleDetails(token) {
            $.ajax({
                type: 'POST',
                url: '/getGoogleDetails',
                dataType: 'json',
                data: {
                    'token': token
                }, success: function (responseJson) {
                    if (responseJson.message == "Request failed with status code 401") {
                        googleAuth();
                    }
                    else {
                        let googleProfile = JSON.parse(responseJson);
                        console.log(googleProfile);
                        $("#userImgGoogle").attr("src", googleProfile.picture);
                        $("#gname").append(googleProfile.name);
                        $("#gemail").append(googleProfile.email);
                        $('#cardGoogle').show();
                        $('#googlelogin').hide();
                        $('#cardSSO').show();
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                }
            })
        }

        // Disconnect from facebook.
        function disconnectFromFb() {
            microsoftTeams.getContext(function (context) {
                $.ajax({
                    type: 'POST',
                    url: '/disconnectFromFb',
                    dataType: 'json',
                    data: {
                        'userName': context.upn
                    },
                    success: function (responseJson) {
                        if (responseJson == 'disconnected from facebook') {
                            $('#cardFacebook').hide();
                            $("#facebooklogin").show();
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    }
                })
            })
        }
        // Disconnect from google.
        function disconnectFromGoogle() {
            microsoftTeams.getContext(function (context) {
                $.ajax({
                    type: 'POST',
                    url: '/disconnectFromGoogle',
                    dataType: 'json',
                    data: {
                        'userName': context.upn
                    },
                    success: function (responseJson) {
                        if (responseJson == 'disconnected from google') {
                            $('#cardGoogle').hide();
                            $("#googlelogin").show();
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log("textStatus: " + textStatus + ", errorThrown:" + errorThrown);
                    }
                })
            })
        }
    </script>

    <style>
        h3 {
            text-align: center;
            margin-top: 0.5rem;
        }

        .card {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            width: 26rem;
            height: 11rem;
            margin-left: 2rem;
            margin-top: 0.5rem;
        }

            .card:hover {
                box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
            }

        .container {
            padding: 2px 2px;
            display: flex;
        }

        .homeImg {
            height: 50%;
        }

        .profile {
            margin-top: 1rem;
            margin-left: 1rem;
            max-width: 25rem;
            align-content: flex-start;
        }

        .btn-outline-info {
            margin-left: 11.5rem;
            max-width: 12.5rem;
            padding: 0.5rem 0rem;
        }

        .signin-header {
            margin-left: 2rem;
            margin-top: 1rem;
        }

        .card-container-div {
            display: flex;
        }

        .ssologin {
            background-color: rgb(98 100 167) !important;
            border-color: rgb(98 100 167) !important;
            color: #fff;
        }

        .home {
            text-align: center;
            margin-top: 1rem;
        }

        .imgContainer {
            text-align: center;
        }

        .ssologin:hover {
            color: #fff;
            border-color: rgb(98 100 167);
        }

        .facebook {
            background-color: #4267b2;
            border-color: #4267b2;
        }

            .facebook:hover {
                background-color: #4267b2;
                border-color: #4267b2;
            }

        .googlebutton {
            border: 2px solid #000;
        }

            .googlebutton img {
                height: 20px;
                margin-right: 3px;
            }
    </style>

</head>
<body class="theme-light">
    <div class="surface">
        <h3> Welcome to App sample</h3>
        <P id="home" class="imgContainer"> <img class="homeImg" id="homeImg" src="/Images/home.png" /></P>
        <div class="home">
            <button type="button" class="btn btn-sm ssologin" onclick="requestConsent()" id="consent"
                    style="display:none;">
                Authenticate
            </button>
            <div id="divError" style="display: none"></div>
            <button type="button" class="btn btn-sm ssologin" onclick="ssoAuthentication()" id="sso">Login with AAD SSO</button>
        </div>
        <div class="home">
            <button type="button" id="facebooklogin" class="btn btn-primary" onclick="facebookLogin()" style="display:none;"><i class="fa fa-facebook"></i> Continue with Facebook</button>
        </div>
        <div class="home">
            <button type="button" id="googlelogin" class="btn" style="display:none;" onclick="googleAuth()"><img id="googleLogo" src="/Images/googleIcon.png">Continue with Google</button>
        </div>
        <div class="card-container-div">
            <div id="cardSSO" style="display:none;">
                <div class="signin-header"><b>User info from SSO</b></div>
                <div class="card">
                    <div class="container">
                        <img src="https://media.istockphoto.com/vectors/profile-placeholder-image-gray-silhouette-no-photo-vector-id1016744034?k=20&m=1016744034&s=612x612&w=0&h=kjCAwH5GOC3n3YRTHBaLDsLIuF8P3kkAJc9RvfiYWBY="
                             alt="Avatar" id="userImgSso" width="100px">
                        <div class="profile">
                            <span id="name"><b>Name: </b></span><br>
                            <span id="email"><b>Email: </b></span><br>
                            <span id="work"><b>Work: </b></span>
                        </div>
                    </div>
                </div>
            </div>
            <div id="cardFacebook" style="display:none;">
                <div class="signin-header"><b>User info from facebook</b></div>
                <div class="card">
                    <div class="container">
                        <img src="https://media.istockphoto.com/vectors/profile-placeholder-image-gray-silhouette-no-photo-vector-id1016744034?k=20&m=1016744034&s=612x612&w=0&h=kjCAwH5GOC3n3YRTHBaLDsLIuF8P3kkAJc9RvfiYWBY="
                             alt="Avatar" id="userFbImg" width="100px">
                        <div class="profile">
                            <span id="fbname"><b>Name: </b></span>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-info" onclick="disconnectFromFb()" id="fb-disConnect">Disconnect from facebook</button>
                </div>
            </div>
            <div id="cardGoogle" style="display:none;">
                <div class="signin-header"><b>User info from google</b></div>
                <div class="card">
                    <div class="container">
                        <img src="https://media.istockphoto.com/vectors/profile-placeholder-image-gray-silhouette-no-photo-vector-id1016744034?k=20&m=1016744034&s=612x612&w=0&h=kjCAwH5GOC3n3YRTHBaLDsLIuF8P3kkAJc9RvfiYWBY="
                             alt="Avatar" id="userImgGoogle" width="100px">
                        <div class="profile">
                            <span id="gname"><b>Name: </b></span><br>
                            <span id="gemail"><b>Email: </b></span><br>
                        </div>
                    </div>
                    <button type="button" class="btn btn-outline-info" onclick="disconnectFromGoogle()" id="google-disConnect">Disconnect from google</button>
                </div>
            </div>
        </div>
</body>